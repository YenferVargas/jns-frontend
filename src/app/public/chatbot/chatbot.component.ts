import { CommonModule } from '@angular/common';
import { AfterViewInit, Component, ElementRef, HostListener, OnInit, Renderer2, ViewChild } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-chatbot',
  imports: [CommonModule, FormsModule],
  templateUrl: './chatbot.component.html',
  styleUrl: './chatbot.component.css'
})
export class ChatbotComponent implements AfterViewInit  {
  isChatOpen: boolean = false;
  userMessage: string = '';
  messages: Array<{ sender: string, content: string }> = [];
  options: string[] = [];
  @ViewChild('userInput') userInput!: ElementRef;

  constructor() { }

  ngAfterViewInit(): void {
    if (this.userInput) {
      this.userInput.nativeElement.addEventListener('keydown', (event: KeyboardEvent) => this.handleInput(event));
    }
  }

  addMessage(sender: string, message: string): void {
    this.messages.push({ sender, content: message });
    setTimeout(() => this.scrollToBottom(), 100);  // Ensure scroll works after rendering
  }

  handleInput(event: KeyboardEvent): void {
    if (event.key === 'Enter') {
      this.sendMessage();
    }
  }

  sendMessage(): void {
    const message = this.userInput.nativeElement.value;
    if (message.trim()) {
      this.addMessage('user', message);
      this.userInput.nativeElement.value = '';  // Clear input after sending
      this.generateBotResponse(message);
    }
  }

  generateBotResponse(input: string): void {
    let response = '';
    const lowerInput = input.toLowerCase();

    if (lowerInput.includes('derecho laboral')) {
      response = 'Entiendo que tienes una consulta sobre Derecho Laboral. ¬øTe interesa saber sobre despidos, contratos laborales, acoso laboral o derechos de los trabajadores?';
      this.options = ['Despidos', 'Contratos laborales', 'Acoso laboral', 'Derechos de los trabajadores'];
    } else if (lowerInput.includes('penal')) {
      response = 'En Derecho Penal, ¬øest√°s interesado en delitos, procedimientos legales, o defensa criminal?';
      this.options = ['Delitos', 'Procedimientos legales', 'Defensa criminal'];
    } else if (lowerInput.includes('hola') || lowerInput.includes('hi')) {
      response = 'Hola!! ¬øC√≥mo puedo ayudarte?'
      this.options = []
    } else if (lowerInput.includes('adios')){
      response = '¬°Adi√≥s! ¬°Que tengas un excelente d√≠a!'
      this.options = []
    } else if(lowerInput.includes('pueden ayudarme con la redacci√≥n de un contrato de franquicia')){
      response = '¬°Hola! üëã Claro que s√≠. Somos expertos en la redacci√≥n de contratos de franquicia. Nos aseguramos de que cumplan con las normativas vigentes y cubran todos los aspectos clave, como derechos de marca, regal√≠as y obligaciones de las partes. ¬øTe gustar√≠a agendar una reuni√≥n para m√°s detalles o recibir un presupuesto personalizado?'
      this.options = []
    } else if(lowerInput.includes('tipos de contratos redactan')){
      response = 'Ofrecemos servicios especializados en la redacci√≥n de: Contratos laborales, Contratos de consorcio, Contratos de franquicia, Contratos personalizados para el desarrollo empresarial. Dinos m√°s sobre lo que necesitas, ¬°estamos listos para ayudarte!' 
      this.options = [];
    } else if(lowerInput.includes('costo') && lowerInput.includes('contrato personalizado')){
      response = 'El costo depende de la complejidad y el alcance del contrato. Por ejemplo: Contratos simples: Desde S/ X. Contratos complejos o personalizados: Evaluamos tus necesidades para ofrecerte un presupuesto justo.'
      this.options = [];
    } else if (lowerInput.includes('pueden ayudarme') && lowerInput.includes('proceso judicial') && lowerInput.includes('despido arbitrario')){
      response = '¬°Hola! üëã S√≠, tenemos amplia experiencia en procesos de despido arbitrario. Te ayudamos desde la revisi√≥n de pruebas hasta la representaci√≥n en el Poder Judicial, asegurando la mejor estrategia para tu caso. ¬øQuieres agendar una consulta inicial para analizar los detalles?'
      this.options = [];
    } else if (lowerInput.includes('documentos necesito') && lowerInput.includes('proceso judicial') && lowerInput.includes('incumplimiento de contrato')){
      response = "Para un proceso judicial por incumplimiento de contrato, generalmente necesitas: \nUna copia del contrato firmado.\nDocumentos que demuestren el incumplimiento (correos, facturas, etc.). \nIdentificaci√≥n de ambas partes. \nSi necesitas apoyo en la revisi√≥n de documentos o para iniciar el proceso, estamos aqu√≠ para ayudarte. ¬øTe gustar√≠a m√°s informaci√≥n?"
      this.options = [];
    } else if(lowerInput.includes('tiempo puede durar un proceso judicial')){
      response = 'La duraci√≥n depende del tipo de proceso y la carga judicial. Por ejemplo: Procesos simples (como demandas laborales): 6-12 meses.Procesos complejos (como resoluci√≥n de contratos): Puede extenderse a m√°s de 2 a√±os. Ofrecemos seguimiento constante para asegurarnos de que tu caso avance lo m√°s r√°pido posible. ¬øQuieres conocer c√≥mo podemos ayudarte?'
      this.options = [];
    } else if (lowerInput.includes('pueden representarme en una conciliaci√≥n previa')){
      response = '¬°Por supuesto! üèõÔ∏è Asistimos y representamos a nuestros clientes en conciliaciones previas, garantizando que tus derechos sean defendidos y logrando acuerdos favorables. ¬øTe gustar√≠a agendar una reuni√≥n para preparar tu caso?'
      this.options = [];
    } else {
      response = 'Lo siento, no entend√≠ eso. ¬øPodr√≠as repetirlo o seleccionar una de las opciones disponibles?';
    }

    this.addMessage('bot', response);
  }

  showOptionButtons(): void {
    this.options = [
      'Derecho Laboral', 'Penal', 'Derecho de Familia', 'Civil', 'Administrativo', 
      'Registro de Marca', 'Derecho de Consumidores', 'Seguros'
    ];
  }

  onOptionSelect(option: string): void {
    this.addMessage('user', option);
    this.generateBotResponse(option);
  }

  toggleChat(): void {
    this.isChatOpen = !this.isChatOpen;
    if (this.isChatOpen) {
      this.showOptionButtons();  // Show options when the chat opens
    }
  }

  minimizeChat(): void {
    this.isChatOpen = false;
  }

  scrollToBottom(): void {
    const chatbox = document.querySelector('.chatbox') as HTMLElement;
    if (chatbox) {
      chatbox.scrollTop = chatbox.scrollHeight;
    }
  }
}
